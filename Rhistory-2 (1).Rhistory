#install.packages('tidytext')
library(tidytext)     #load the tidytext package
#install.packages('Metrics')
library(Metrics)    #load the metrics library
#install.packages('dplyr')
library(dplyr)
#install.packages('textdata')
library(textdata)
library(ggplot2)
library(car)
data=read.csv("C:\\Users\\harsh\\Downloads\\FDX (1) FINAL.csv",header=TRUE)
ds=data$Date
series_data = data.frame(ds,y = as.numeric(data[,'Close']))
series_data
#install.packages("prophet")
library(prophet)
prediction = prophet(series_data)
predicted_value = make_future_dataframe(prediction, periods = 365)
stockprice = predict(prediction,predicted_value)
plot(prediction,stockprice)
df=data[,c("Open","High","Low","Volume","Close")] #create a new dataframe with the predictor columns
nrow(df)
train=df[1:153,]  #create the training set in the new dataframe
test=df[154:253,]
test1=df[154:253,1:4]   #create the testing set in the new dataframe
shuffle_train=train[sample(1:nrow(train)),]   #shuffle the training rows
shuffle_train      #output the shuffled rows
#install.packages('party')
library(caTools)   #load the Catools library
library(party)     #load the party library
library(dplyr)     #load the dplyr library
library(magrittr)  #load the magrittr library
train    #output the training data
test     #output the testing data
#install.packages('rpart')
#install.packages('rpart.plot')
library(rpart)     #load the rpart library
library(rpart.plot) #load the rpart.plot library
tree=rpart(Close~Open+High+Low+Volume,data=train,method = 'anova')
tree
p1=predict(tree,test,method='anova') #predict the stock values using this decision tree model
p1                 #output the predicted values
#Leave One Out Cross Validation
library(caret)
set.seed(5)
control=trainControl(method ="LOOCV")  #train the loose one out cross validation
tree1=train(Close~Open+High+Low+Volume,data=train,method='rpart',trControl=control)
#implement the cross validation for the decision tree model
print(tree1)   #output the validated tree model
plot(tree1)    #plot the validated tree
p10=predict(tree,test1)   #predicted the stock values using this validated model
p10    #output the predicted values
#Random Forest Model
library(randomForest)
rf=randomForest(Close~., data=train, proximity=TRUE)
print(rf)
